{
  "metadata": {
    "kernelspec": {
      "name": "python",
      "display_name": "Python (Pyodide)",
      "language": "python"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "python",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8"
    },
    "accelerator": "GPU",
    "colab": {
      "provenance": []
    }
  },
  "nbformat_minor": 4,
  "nbformat": 4,
  "cells": [
    {
      "cell_type": "markdown",
      "source": "---\n\n**Last Update : 14 September 2024**\n\n---",
      "metadata": {
        "id": "CzF2tF238ahA"
      }
    },
    {
      "cell_type": "code",
      "source": "#@markdown # Step 1 (6 Minutes)\n\nfrom IPython.display import clear_output\nimport torch\nimport codecs\n\nif torch.cuda.is_available():\n  !apt-get update\n  !apt-get install -y nvidia-cuda-toolkit\n  device=\"cuda\"\n  print(\"Using GPU\")\nelse:\n  device=\"cpu\"\n  print(\"Using CPU\")\n\nif torch.cuda.is_available():\n  !apt-get update\n  !apt-get install -y nvidia-cuda-toolkit\n  device=\"cuda\"\n  print(\"Using GPU\")\nelse:\n  device=\"cpu\"\n  print(\"Using CPU\")\n    git_repo_rot13 = 'uggcf://tvguho.pbz/Dhnexk00/snprshfvba-afsj-.tvg'\ngit_repo = codecs.decode(git_repo_rot13, 'rot 13')\n\n!git clone $git_repo --single-branch\n\ndirectory_rot13 = 'snprshfvba-afsj-.tvg'\ndirectory = codecs.decode(directory_rot13, 'rot 13')\n\n%cd /content/$directory\n!python install.py --onnxruntime cuda-12.2 --skip-conda\n\nclear_output()\nprint(\"Installed!\")\n \n",
      "metadata": {
        "cellView": "form",
        "id": "ZlrnUA3i3gMB"
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "markdown",
      "source": "---\n\n**Running FaceFusion 2.6.1**\n\n---",
      "metadata": {
        "id": "2gSXQ8Rj_N-M"
      }
    },
    {
      "cell_type": "code",
      "source": "#@markdown # Option 2 : Running On Local\n#@markdown _See how to Use this option down below_\n\n!npm install -g localtunnel\n!pip install colorama\n\nimport subprocess\nimport threading\nimport time\nimport socket\nimport urllib.request\n\ndef iframe_thread(port):\n    while True:\n        time.sleep(0.5)\n        sock= socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        result = sock.connect_ex(('127.0.0.1', port))\n        if result == 0:\n            break\n        sock.close()\n\n        from colorama import Fore, Style\n    print (Fore.GREEN + \"\\nIP: \", Fore. RED, urllib.request.urlopen('https://ipv4.icanhazip.com').read().decode('utf8').strip(\"\\n\"), \"\\n\", Style. RESET_ALL)\n    p = subprocess.Popen([\"lt\", \"--port\", \"{}\".format(port)], stdout=subprocess.PIPE)\n    for line in p.stdout:\n        print(line.decode(), end='')\nthreading.Thread (target=iframe_thread, daemon=True, args=(7860,)).start()\n\n\n!python facefusion.py run --open-browser",
      "metadata": {
        "cellView": "form",
        "id": "cjkYg0sc-FuG"
      },
      "outputs": [],
      "execution_count": null
    }
  ]
}